// <auto-generated />
using System;
using BookstoreApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(BookStoreDbContext))]
    [Migration("20250916133709_V3")]
    partial class V3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "Dobitnik Nobelove nagrade za književnost.",
                            DateOfBirth = new DateTime(1892, 10, 9, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Ivo Andrić"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "Autor romana Derviš i smrt.",
                            DateOfBirth = new DateTime(1910, 4, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Mesa Selimović"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "Poznat po romanu Bašta, pepeo.",
                            DateOfBirth = new DateTime(1935, 2, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Danilo Kiš"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Pisac za decu i odrasle, humorista.",
                            DateOfBirth = new DateTime(1915, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Branko Ćopić"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Prozaista i političar.",
                            DateOfBirth = new DateTime(1921, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Dobrica Ćosić"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AwardedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            AwardId = 2,
                            AwardedDate = new DateTime(1961, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            AwardId = 3,
                            AwardedDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            AwardId = 1,
                            AwardedDate = new DateTime(1967, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            AwardId = 3,
                            AwardedDate = new DateTime(1971, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            AwardId = 1,
                            AwardedDate = new DateTime(1966, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            AwardId = 3,
                            AwardedDate = new DateTime(1973, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            AwardId = 4,
                            AwardedDate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            AwardId = 4,
                            AwardedDate = new DateTime(1950, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            AwardId = 3,
                            AwardedDate = new DateTime(1960, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            AwardId = 1,
                            AwardedDate = new DateTime(1965, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            AwardId = 1,
                            AwardedDate = new DateTime(1955, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            AwardId = 2,
                            AwardedDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 5,
                            AwardId = 3,
                            AwardedDate = new DateTime(1978, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 2,
                            AwardId = 4,
                            AwardedDate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 1,
                            AwardId = 4,
                            AwardedDate = new DateTime(1978, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearEstablished")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Najznačajnija književna nagrada u Srbiji.",
                            Name = "NIN-ova nagrada",
                            YearEstablished = 1954
                        },
                        new
                        {
                            Id = 2,
                            Description = "Međunarodna nagrada za književnost.",
                            Name = "Nobelova nagrada za književnost",
                            YearEstablished = 1901
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dodeljuje se za priče i romane.",
                            Name = "Andrićeva nagrada",
                            YearEstablished = 1975
                        },
                        new
                        {
                            Id = 4,
                            Description = "Nagrada za dečju književnost.",
                            Name = "Zmajeva nagrada",
                            YearEstablished = 1958
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "978000000001",
                            PageCount = 350,
                            PublishedDate = new DateTime(1945, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Na Drini ćuprija"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "978000000002",
                            PageCount = 320,
                            PublishedDate = new DateTime(1945, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Travnička hronika"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "978000000003",
                            PageCount = 400,
                            PublishedDate = new DateTime(1966, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Derviš i smrt"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "978000000004",
                            PageCount = 380,
                            PublishedDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Tvrđava"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "978000000005",
                            PageCount = 250,
                            PublishedDate = new DateTime(1965, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Bašta, pepeo"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "978000000006",
                            PageCount = 200,
                            PublishedDate = new DateTime(1969, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Rani jadi"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            ISBN = "978000000007",
                            PageCount = 300,
                            PublishedDate = new DateTime(1972, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Peščanik"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            ISBN = "978000000008",
                            PageCount = 50,
                            PublishedDate = new DateTime(1949, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Ježeva kućica"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 4,
                            ISBN = "978000000009",
                            PageCount = 60,
                            PublishedDate = new DateTime(1955, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Doživljaji mačka Toše"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            ISBN = "978000000010",
                            PageCount = 420,
                            PublishedDate = new DateTime(1954, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Koreni"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 5,
                            ISBN = "978000000011",
                            PageCount = 500,
                            PublishedDate = new DateTime(1961, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Deobe"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            ISBN = "978000000012",
                            PageCount = 600,
                            PublishedDate = new DateTime(1972, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Vreme smrti"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Beograd, Srbija",
                            Name = "Laguna",
                            Website = "https://www.laguna.rs"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Beograd, Srbija",
                            Name = "Vulkan",
                            Website = "https://www.knjizare-vulkan.rs"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Beograd, Srbija",
                            Name = "Dereta",
                            Website = "https://www.dereta.rs"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany()
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });
#pragma warning restore 612, 618
        }
    }
}
